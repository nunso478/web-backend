{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "ficha8 API",
    "description": "Ficha 8 API information",
    "contact": {
      "name": "TPSI-DWB"
    },
    "servers": [
      "http://localhost:3000"
    ]
  },
  "paths": {
    "/product": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Create product",
        "description": "this can only be done by logged in user.",
        "operationID": "createProduct",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successfull operation"
          }
        }
      },
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Update a list of product",
        "description": "Returns a list of product",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product ID",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "alter product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "descrition": "Sucessfully  Update"
          }
        }
      },
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Gets a list of product",
        "description": "Returns a list of product.",
        "operationID": "createproduct",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "descrition": "succeful operation",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Gets a list of product by id",
        "description": "Get person by ID.",
        "operationID": "getProduct",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the id that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "descrition": "succeful operation",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "400": {
            "description": "invalid id suplied"
          },
          "404": {
            "description": "id not found"
          }
        }
      }
    },
    "definitions": {
      "product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "x-primery-key": true
          },
          "seller_id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "profession": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "decimal"
          },
          "url": {
            "type": "string"
          },
          "views": {
            "type": "integer",
            "format": "int64"
          },
          "images": {
            "type": "JSON"
          },
          "comments": {
            "type": "JSON"
          },
          "tags": {
            "type": "JSON"
          }
        }
      }
    }
  }
}